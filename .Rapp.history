a(pi)
}
customFunction <- function(x) {#
	3 * sin(x/2) + x#
}
customFunction
customFunction(0)
customFunction(-1)
customFunction(pi)
plot(customFunction(-7),customFunction(7))
load(".RData")
?source
source('/Users/ricardohdz/r-projects/customFunction.R')
?nrow
c(5,4,3,2,1,0)+2
plot(pi)
plot(sin, -pi, pi)
?cat
?density
?hist
?'if'
?summary
my.display <- function(x) {#
	cat('summary of input:\n', summary(x))#
}
my.display(5)
?graph
?hist?
?hist
?density
my.display <- function(x, display = false, type = '', freqValue = false) {#
	#type = 'hist' || 'density'#
	if (display && type == '') {#
		return 'Please specify type as either hist or density'#
	} else if (display && type == 'hist') {#
		return hist(x, freq = freqValue)#
	} else if (display && type == 'density') {#
		return density(x)#
	} else {#
		return 'N args specified'#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display <- function(x, display = false, type = '', freqValue = false) {#
	#type = 'hist' || 'density'#
	if (display & type == '') {#
		return 'Please specify type as either hist or density'#
	} else if (display & type == 'hist') {#
		return hist(x, freq = freqValue)#
	} else if (display & type == 'density') {#
		return density(x)#
	} else {#
		return 'N args specified'#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display <- function(x, display = false, type = '', freqValue = false) {#
	#type = 'hist' || 'density'#
	if (display & type == '') {#
		return "Please specify type as either hist or density"#
	} else if (display & type == 'hist') {#
		return hist(x, freq = freqValue)#
	} else if (display & type == 'density') {#
		return density(x)#
	} else {#
		return 'N args specified'#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display <- function(x, display = false, type = "", freqValue = false) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return "Please specify type as either hist or density"#
	} else if (display & type == 'hist') {#
		return hist(x, freq = freqValue)#
	} else if (display & type == 'density') {#
		return density(x)#
	} else {#
		return 'N args specified'#
	}#
	#cat('summary of input:\n', summary(x))#
}
?'if'
my.display <- function(x, display = false, type = "", freqValue = false) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return cat()"Please specify type as either hist or density")#
	} else if (display & type == 'hist') {#
		return hist(x, freq = freqValue)#
	} else if (display & type == 'density') {#
		return density(x)#
	} else {#
		return 'N args specified'#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display <- function(x, display = false, type = "", freqValue = false) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return cat("Please specify type as either hist or density")#
	} else if (display & type == 'hist') {#
		return hist(x, freq = freqValue)#
	} else if (display & type == 'density') {#
		return density(x)#
	} else {#
		return 'N args specified'#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display <- function(x, display = false, type = "", freqValue = false) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		cat("Please specify type as either hist or density")#
	} else if (display & type == 'hist') {#
		return hist(x, freq = freqValue)#
	} else if (display & type == 'density') {#
		return density(x)#
	} else {#
		return 'N args specified'#
	}#
	#cat('summary of input:\n', summary(x))#
}
?return
my.display <- function(x, display = false, type = "", freqValue = false) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		hist(x, freq = freqValue)#
	} else if (display & type == 'density') {#
		return density(x)#
	} else {#
		return 'N args specified'#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display <- function(x, display = false, type = "", freqValue = false) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = freqValue))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		return('N args specified')#
	}#
	#cat('summary of input:\n', summary(x))#
}
set.seed(1234)
my.data
my.data<-rnorm(200)
my.display(my.data)
my.display <- function(x, display = FALSE, type = "", freqValue = FALSE) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = freqValue))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		return('N args specified')#
	}#
	#cat('summary of input:\n', summary(x))#
}
set.seed(1234)
my.data<-rnorm(200)
my.display(my.data)
my.display <- function(x, display = FALSE, type = "", freqValue = FALSE) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = freqValue))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		#return('N args specified')#
		md(x)#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display(my.data)
my.display <- function(x, display = FALSE, type = "", freqValue = FALSE) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = freqValue))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		#return('N args specified')#
		median(x)#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display(my.data)
my.display(my.data,display=TRUE,type="hist")
my.display <- function(x, display = FALSE, type = "", freqValue = TRUE) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = freqValue))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		#return('N args specified')#
		median(x)#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display(my.data,display=TRUE,type="hist")
my.display(my.data,display=TRUE,type="hist",prob=TRUE)
hist?
?hist
my.display <- function(x, display = FALSE, type = "", freqValue = FALSE, probValue = FALSE) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = freqValue, prob = ))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		#return('N args specified')#
		median(x)#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display(my.data,display=TRUE,type="hist")
my.display <- function(x, display = FALSE, type = "", freqValue = FALSE, probValue = TRUE) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = freqValue, prob = ))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		#return('N args specified')#
		median(x)#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display(my.data,display=TRUE,type="hist")
my.display <- function(x, display = FALSE, type = "", freqValue = TRUE, probValue = FALSE) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = freqValue, prob = ))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		#return('N args specified')#
		median(x)#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display(my.data,display=TRUE,type="hist")
my.display(my.data,display=TRUE,type="hist",prob=TRUE)
my.display(my.data,display=TRUE,type="hist",probValue=TRUE)
my.display <- function(x, display = FALSE, type = "", freqValue = TRUE, probValue = FALSE) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = freqValue, prob = probValue))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		#return('N args specified')#
		median(x)#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display(my.data,display=TRUE,type="hist",probValue=TRUE)
my.display <- function(x, display = FALSE, type = "", freqValue = FALSE) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = prob))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		#return('N args specified')#
		median(x)#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display(my.data,display=TRUE,type="hist")
my.display <- function(x, display = FALSE, type = "", prob = FALSE) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = prob))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		#return('N args specified')#
		median(x)#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display(my.data,display=TRUE,type="hist")
my.display <- function(x, display = FALSE, type = "", prob = TRUE) {#
	#type = 'hist' || 'density'#
	if (display & type == "") {#
		return(cat("Please specify type as either hist or density"))#
	} else if (display & type == 'hist') {#
		return(hist(x, freq = prob))#
	} else if (display & type == 'density') {#
		return(density(x))#
	} else {#
		#return('N args specified')#
		median(x)#
	}#
	#cat('summary of input:\n', summary(x))#
}
my.display(my.data,display=TRUE,type="hist")
my.display(my.data,display=TRUE,type="density")
my.display(my.data,display=TRUE)
0 != false
0 != FALSE
0 == FALSE
matrix(1:6,nrow=3,ncol=3)
matrix(nrow=3,ncol=3)
x<-matrix(1:12,4)
x
x[cbind(c(1,3,2),c(3,3,2))]
x
cbind(c(1,3,2),c(3,3,2))
x
x[c(1,3,2),c(3,3,2)]
row<-matrix(rep(1:100,100),nrow=100)
column<-matrix(rep(1:100,100),nrow=100,byrow=T)
A<-3*column^3/(1+row*column)
A
row<-matrix(rep(1:100,100),nrow=100)
column<-matrix(rep(1:100,100),nrow=100,byrow=T)
A<-3*column^3/(1+row*column)
row
column<-matrix(rep(1:100,100),nrow=100,byrow=T)
column
A
sum(A)
sum(A[,1])
A[,1]
sum(A[,1])
z<-rep(9:10,1)
z
?rep
set.seed(9852)
my.data<-list()
for(i in 1:100){#
  my.data[[i]]<-matrix(rnorm(16),nrow=4)#
}
my.data
my.data[[1]]
my.data[1]
my.data[1]
my.data[2]
my.data[2,3]
my.data
my.index<-list()#
for(i in 1:100){#
	my.index[[i]]<-(my.data[[i]]<0)#
}
my.negatives<-matrix(rep(0,16),nrow=4)#
for(i in 1:100){#
	my.negatives<-my.negatives+my.index[[i]]#
}#
my.negatives
sum(my.negatives)
c(my.negative.values,my.data[[i]][my.index[[i]]])
my.negative.values<-numeric(0)
c(my.negative.values,my.data[[i]][my.index[[i]]])
summary(my.negative.values)
for(i in 1:100){#
	my.negative.values<-c(my.negative.values,my.data[[i]][my.index[[i]]]) #
}
summary(my.negative.values)
getwd()
getwd()
getwd()
mydata<-read.table('data/data.exercise5.1.dat', header=TRUE)
mydata<-read.table('data/data.exercise5.1.dat')
?read.table
mydata<-read.table('data/data.exercise5.1.dat', na.strings='NA')
mydata<-read.table('data/data.exercise5.1.dat', skip=1,header=T)
mydata
mydata<-read.table('data/data.exercise5.2.dat', sep=";", skip=2,header=T)
mydata
mydata<-read.csv2('data/data.exercise5.3.csv')
mydata<-read.csv2('data/data.exercise5.3')
mydata<-read.csv2('data/Exercise 5.3.csv')
mydata
mydata<-read.csv2('data/Exercise 5.3.csv',skip=2,sep=",")
mydata
mydata<-scan("data/Exercise 5.4a.txt")
mydata<-scan("data/Exercise 5.4a.txt",skip="1")
mydata<-file("data/Exercise 5.4a.txt",skip="1")
mydata<-file("data/Exercise 5.4a.txt")
mydata
mydata<-read.table("data/Exercise 5.4a.txt",skip="1")
mydata<-read.table("data/Exercise 5.4a.txt",skip="1",header=T)
mydata<-read.table("data/Exercise 5.4a.txt",skip=1,header=T)
f1<-file("data/Exercise 5.4a.txt",open="r")
readLines(f1)
mydata<-scan(f1,what=int(),nlines1)
mydata<-scan(f1,what="",nlines1)
mydata<-scan(f1,what="",nlines=1)
f1<-file("data/Exercise 5.4a.txt",open="r")
mydata<-scan(f1,what="",nlines=1)
mydata
mydata<-scan(f1,what="",nlines=1)
mydata
mydata[1]<-scan(f1,what="",nlines=1)
f1<-file("data/Exercise 5.4a.txt",open="r")
mynames<-scan(f1,what="",nlines=1,skip=1)
mydata<-read.table(f1)
close(f1)
mynames<-paste(mynames[c(1,3,5)], mynames[c(2,4,6)])
names(mydata)<-mynames
mydata
mydata<-list()
mynames<-character(2)
f1<-file("data/Exercise 5.5b.txt", open="r")
f1<-file("data/Exercise 5.4b.txt", open="r")
mynames[1]<-scan(f1,what="",nlines=1,skip=1)
mydata[[1]]<-scan(f1,nlines=1)
mynames[2]<-scan(f1,what="",nlines=1)
mydata[[2]]<-matrix(scan(f1),nrow=4,byrow=T)
close(f1)
names(mydata)<-mynames
mydata
rbind?
?rbind
f1<-file("data/Assignment 5.dat",open="r")
my.data<-read.table(f1,skip=4,comment.char="%",nrows=7)
my.data2<-read.table(f1,skip=3,sep=";",dec=",",nrows=2)
my.data3<-read.table(f1,skip=5,na.strings="-9999",sep=",",nrows=2)
my.all.data<-rbind(my.data,my.data2,my.data3)
my.all.data
set.seed(9007)#
my.data<-data.frame(x=rnorm(10),y=rnorm(10)+5,z=rchisq(10,1))#
additional.data<-data.frame(x=rnorm(3),y=rnorm(3)+5,z=rchisq(3,1))
?write.data
??write.data
write.data(my.data, file="data/Exercise 6.txt")
?write.file
??write.file
write.file(my.data, file="data/Exercise 6.txt")
write.table(my.data, file="data/Exercise 6.txt", row.names=F,col.names=F)
set.seed(45)
my.data<-data.frame(x=rnorm(10),y=rnorm(10),z=rnorm(10))
?write.csv2
write.csv2(my.data,file="6.2.csv")
write.csv2(my.data,file="6.2.csv")
write.csv2(my.data,file="data/6.2.csv")
write.csv2(my.data,file="data/6.2.csv",row.names=T,col.name=T)
write.csv2(my.data,file="data/6.2.csv",row.names=T,col.names=T)
write.csv2(my.data,file="data/6.2.csv",col.names=T)
write.csv2(my.data,file="data/6.2.csv",row.names=T,col.names=T)
write.csv2(my.data,file="data/6.2.csv",row.names=TRUE,col.names=TRUE)
write.csv2(my.data,file="data/6.2.csv",row.names=TRUE,col.names=TRUE,sep=";")
write.csv(my.data,file="data/6.2.csv",row.names=TRUE,col.names=TRUE,sep=";")
?write.lines
??write.lines
?sink
??write.lines
my.data<-data.frame(a=LETTERS[1:5],b=1:5)
my.data
write.table(my.data,file="data/6.2a.txt")
write.table(my.data,file="data/6.2a.txt",sep=";",row.names=F)
my.text<-"TITLE extra line\n2 3 5 7\n11 13 17\nOne more line"
writeLines(my.text,con="data/6.2b.txt")
set.seed(45)
my.data<-data.frame(x=rnorm(10),y=rnorm(10),z=rnorm(10))
save?
?save
save(my.data,file="6.2.Rdata")
save(my.data,file="data/6.2.Rdata")
rm(list=ls())
ls()
load(file="data/6.2.Rdata")
ls()
??write.table
?digits
?round
?format
set.seed(9007)
my.data<-data.frame(x=rnorm(10),y=rnorm(10)+5,z=rchisq(10,1))
write.table(round(my.data,digits = 2),"Assignment 6a.txt",row.names=FALSE)
write.table(format(my.data,digits = 20),"Assignment 6b.txt",row.names=FALSE)
my.data2<-my.data*10e5
write.table(my.data2,file="data/Assignment6c.txt",row.names=F)
dataRead<-read.table(file="data/Assignment6c.txt",header=T)
dataRead/10e5
my.date3<-dataRead/10e5
my.data[;1,1]-my.date3[1,1]
my.data[1,1]-my.date3[1,1]
format(my.data[1,1]-my.date3[1,1],digits=20)
library(help=RPDBC)
library(help=RODBC)
library(RODBC)
?install
??install
install.packages(RODBC)
library(help=RODBC)
library(RODBC)
library(RODBC)
